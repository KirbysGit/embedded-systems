#include <msp430.h>

void Initialize_UART2(void);
void uart_write_char(unsigned char ch);
unsigned char uart_read_char(void);
void uart_write_uint16(unsigned int n);
void uart_write_string(char* str);

#define redLED BIT0
#define greenLED BIT7
#define FLAGS UCA1IFG
#define RXFLAG UCRXIFG
#define TXFLAG UCTXIFG
#define TXBUFFER UCA1TXBUF
#define RXBUFFER UCA1RXBUF

volatile unsigned char received_char = '\0';

int main(void) {
    WDTCTL = WDTPW | WDTHOLD;
    PM5CTL0 &= ~LOCKLPM5;

    Initialize_UART2();
    P1DIR |= redLED;
    P9DIR |= greenLED;
    P1OUT &= ~redLED;
    P9OUT &= ~greenLED;

    uart_write_string("Hello World!");
    uart_write_char('\n');
    uart_write_char('\r');

    uart_write_uint16(12345);
    uart_write_char('\n');
    uart_write_char('\r');
}

void Initialize_UART2(void) {
    P3SEL1 &= ~(BIT4 | BIT5);
    P3SEL0 |= (BIT4 | BIT5);

    config_ACLK_to_32KHz_crystal();

    UCA1CTLW0 |= UCSWRST;

    UCA1CTLW0 |= UCSSEL_1;

    UCA1BRW = 6;
    UCA1MCTLW = UCBRS7 | UCBRS6 | UCBRS5 | UCBRS3 | UCBRS2 | UCBRS1;

    UCA1CTLW0 &= ~UCSWRST;
}

void uart_write_char(unsigned char ch) {
    while ((FLAGS & TXFLAG) == 0) {}

    TXBUFFER = ch;
}

unsigned char uart_read_char() {
    if ((FLAGS & RXFLAG) == 0)
        return 0;

    return RXBUFFER;
}

void uart_write_uint16(unsigned int n) {
    char buffer[6];
    unsigned int i = 0;

    do {
        buffer[i++] = (n % 10) + '0';
        n /= 10;
    } while (n > 0);

    buffer[i] = '\0';

    for (i--; i != (unsigned int)-1; i--) {
        uart_write_char(buffer[i]);
    }
}

void uart_write_string(char* str) {
    while (*str != '\0') {
        uart_write_char(*str++);
    }
}

void config_ACLK_to_32KHz_crystal() {
    PJSEL1 &= ~BIT4;
    PJSEL0 |= BIT4;

    CSCTL0 = CSKEY;
    do {
        CSCTL5 &= ~LFXTOFFG;
        SFRIFG1 &= ~OFIFG;
    } while((CSCTL5 & LFXTOFFG) != 0);

    CSCTL0_H = 0;

    return;
}
