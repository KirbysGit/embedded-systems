#include <msp430fr6989.h>

#define redLED BIT0
#define greenLED BIT7
#define BUT1 BIT1
#define BUT2 BIT2

volatile int state = 4;

void config_ACLK_to_32kHz_crystal() {
    PJSEL1 &= ~BIT4;
    PJSEL0 |= BIT4;
    CSCTL0 = CSKEY;
    do {
        CSCTL5 &= ~LFXTOFFG;
        SFRIFG1 &= ~OFIFG;
    } while (CSCTL5 & LFXTOFFG);
    CSCTL0_H = 0;
}

void configTimer() {
    TA0CCTL0 = CCIE;
    TA0CTL = TASSEL__ACLK | MC__UP;
    TA0CCR0 = 32768 - 1;
}

void main(void) {
    WDTCTL = WDTPW | WDTHOLD;
    PM5CTL0 &= ~LOCKLPM5;

    P1DIR |= redLED;
    P9DIR |= greenLED;
    P1OUT &= ~redLED;
    P9OUT &= ~greenLED;

    P1DIR &= ~(BUT1 | BUT2);
    P1REN |= (BUT1 | BUT2);
    P1OUT |= (BUT1 | BUT2);
    P1IES |= (BUT1 | BUT2);
    P1IFG &= ~(BUT1 | BUT2);
    P1IE |= (BUT1 | BUT2);

    config_ACLK_to_32kHz_crystal();

    TA0CCTL0 = CCIE;
    TA0CTL = TASSEL__ACLK | MC__UP;
    TA0CCR0 = 32768 - 1;


    for (;;) {
        __low_power_mode_3();
    }
}

#pragma vector=PORT1_VECTOR
__interrupt void Port1_ISR(void) {
    if(P1IFG & BUT1) {
        if(state > 1) state--;
        P1IFG &= ~BUT1;
    }

    if(P1IFG & BUT2) {
        if(state < 7) state++;
        P1IFG &= ~BUT2;
    }
    __delay_cycles(20000);
}

#pragma vector=TIMER0_A0_VECTOR
__interrupt void Timer_A0_ISR(void) {
    static unsigned int syncFlash = 0;

    if (state >= 1 && state <= 3) { // If State 1 2 3
        P1OUT ^= redLED;
        P9OUT &= ~greenLED;
        TA0CCR0 = 32768 - ((4 - state) * 7500); // Speed Up Red Flashing
        syncFlash = 0;
    } else if (state == 4) {
        if (!syncFlash) {
            P1OUT |= redLED;
            P9OUT |= greenLED;
            syncFlash = 1; // Sync the flashing lights
        } else {
            P1OUT ^= redLED;
            P9OUT ^= greenLED;
        }
        TA0CCR0 = 32768 - 1; // Slowest flash rate for synchronous state
    } else if (state >= 5 && state <= 7) { // If State 5 6 7
        P1OUT &= ~redLED;
        P9OUT ^= greenLED;
        TA0CCR0 = 32768 - ((state - 4) * 7500); // Speed Up Green Flashing
        syncFlash = 0;
    }
}

