#include <msp430fr6989.h>
#define PWM_PIN BIT0

void config_ACLK_to_32kHz_crystal(void);
void Initialize_ADC(void);

// Up - If Y value is greater than 3600

// Down - If Y value is less than 400

// Left - If X value is greater than

// Right - If X value is greater than 3000


void main(void) {
    WDTCTL = WDTPW | WDTHOLD;
    PM5CTL0 &= ~LOCKLPM5;

    P1DIR |= PWM_PIN;
    P1SEL1 &= ~PWM_PIN;
    P1SEL0 |= PWM_PIN;
    Initialize_ADC();
    config_ACLK_to_32kHz_crystal();

    TA0CCR1 = 0;
    TA0CCTL1 |= OUTMOD_7;

    TA0CCR0 = 33;
    TA0CTL = TASSEL_1 | ID_0 | MC_1 | TACLR;

    for(;;) {
        ADC12CTL0 |= ADC12SC;

        while (ADC12BUSY == 0) {};

        if (ADC12MEM0 < 500) {
            if (TA0CCR1 > 1) {
                TA0CCR1 = TA0CCR1 - 1;
            }
        } else if (ADC12MEM0 > 3000) {
            if (TA0CCR1 < 32) {
                TA0CCR1 = TA0CCR1 + 1;
            }
        } else if (ADC12MEM1 > 3600) {
            TA0CCR1 = 32;
        } else if (ADC12MEM1 < 400) {
            TA0CCR1 = 1;
        }

        __delay_cycles(25000);

    }
    return;
}

void config_ACLK_to_32kHz_crystal() {
    PJSEL1 &= ~BIT4;
    PJSEL0 |= BIT4;

    CSCTL0 = CSKEY;

    do {
        CSCTL5 &= ~LFXTOFFG;
        SFRIFG1 &= ~OFIFG;
    } while ( (CSCTL5 & LFXTOFFG) != 0);

    CSCTL0_H = 0;
    return;
}

void Initialize_ADC(void) {
    P9SEL1 |= BIT2;
    P9SEL0 |= BIT2;

    ADC12CTL0 |= ADC12ON;

    ADC12CTL0 &= ~ADC12ENC; // Turn OFF Enable Conversion

    ADC12CTL0 |= ADC12SHT0_3 | ADC12MSC; // Set Multiple Sample and Conversion.

    ADC12CTL1 |= ADC12SHS_0 | ADC12SHP | ADC12DIV_0 | ADC12SSEL_0 | ADC12CONSEQ_1;

    ADC12CTL2 |= ADC12RES_2;

    ADC12CTL3 |= ADC12CSTARTADD_0; // Set " " to 0.

    ADC12MCTL0 |= ADC12VRSEL_0 | ADC12INCH_10;

    ADC12MCTL1 |= ADC12VRSEL_0 | ADC12INCH_4 | ADC12EOS; // Set VRSEL, Set INCH to Chl 4, Set EOS.

    ADC12CTL0 |= ADC12ENC;

    return;
}

